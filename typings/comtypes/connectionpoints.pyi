"""
This type stub file was generated by pyright.
"""

from ctypes import Structure, _CArgObject, _Pointer
from typing import TYPE_CHECKING, Tuple, Union as _UnionT
from comtypes import GUID, IUnknown, hints

if TYPE_CHECKING:
    REFIID = _UnionT[_Pointer[GUID], _CArgObject]
_GUID = GUID
class tagCONNECTDATA(Structure):
    _fields_ = ...


CONNECTDATA = tagCONNECTDATA
class IConnectionPointContainer(IUnknown):
    _iid_ = ...
    _idlflags_ = ...
    if TYPE_CHECKING:
        def EnumConnectionPoints(self) -> IEnumConnectionPoints:
            ...
        
        def FindConnectionPoint(self, riid: REFIID) -> IConnectionPoint:
            ...
        


class IConnectionPoint(IUnknown):
    _iid_ = ...
    _idlflags_ = ...
    if TYPE_CHECKING:
        def GetConnectionPointContainer(self) -> IConnectionPointContainer:
            ...
        
        def Advise(self, pUnkSink: IUnknown) -> int:
            ...
        
        def Unadvise(self, dwCookie: int) -> hints.Hresult:
            ...
        
        def EnumConnections(self) -> IEnumConnections:
            ...
        


class IEnumConnections(IUnknown):
    _iid_ = ...
    _idlflags_ = ...
    if TYPE_CHECKING:
        def Next(self, cConnections: int) -> Tuple[tagCONNECTDATA, int]:
            ...
        
        def Skip(self, cConnections: int) -> hints.Hresult:
            ...
        
        def Reset(self) -> hints.Hresult:
            ...
        
        def Clone(self) -> IEnumConnections:
            ...
        
    def __iter__(self): # -> Self:
        ...
    
    def __next__(self): # -> tagCONNECTDATA:
        ...
    


class IEnumConnectionPoints(IUnknown):
    _iid_ = ...
    _idlflags_ = ...
    if TYPE_CHECKING:
        def Next(self, cConnections: int) -> Tuple[IConnectionPoint, int]:
            ...
        
        def Skip(self, cConnections: int) -> hints.Hresult:
            ...
        
        def Reset(self) -> hints.Hresult:
            ...
        
        def Clone(self) -> IEnumConnectionPoints:
            ...
        
    def __iter__(self): # -> Self:
        ...
    
    def __next__(self): # -> IConnectionPoint:
        ...
    


