"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional, Type, TypeVar, Union as _UnionT, overload
from comtypes import CoClass, GUID, IUnknown

_T_IUnknown = TypeVar("_T_IUnknown", bound=IUnknown)
@overload
def GetActiveObject(progid: _UnionT[str, Type[CoClass], GUID]) -> Any:
    ...

@overload
def GetActiveObject(progid: _UnionT[str, Type[CoClass], GUID], interface: Type[_T_IUnknown]) -> _T_IUnknown:
    ...

def GetActiveObject(progid: _UnionT[str, Type[CoClass], GUID], interface: Optional[Type[IUnknown]] = ..., dynamic: bool = ...) -> Any:
    """Return a pointer to a running COM object that has been
    registered with COM.

    'progid' may be a string like "Excel.Application",
       a string specifying a clsid, a GUID instance, or an object with
       a _clsid_ attribute which should be any of the above.
    'interface' allows to force a certain interface.
    'dynamic=True' will return a dynamic dispatch object.
    """
    ...

