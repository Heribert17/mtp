"""
This type stub file was generated by pyright.
"""

import ctypes
from typing import Any, Dict, Optional, Set, Type, TypeVar
from comtypes import GUID, IUnknown, automation

_T_IUnknown = TypeVar("_T_IUnknown", bound=IUnknown)
ERRORS_BAD_CONTEXT = ...
def Dispatch(obj): # -> _Dispatch | Dispatch:
    """Wrap an object in a Dispatch instance, exposing methods and properties
    via fully dynamic dispatch.
    """
    ...

class MethodCaller:
    def __init__(self, _id: int, _obj: _Dispatch) -> None:
        ...
    
    def __call__(self, *args: Any) -> Any:
        ...
    
    def __getitem__(self, *args: Any) -> Any:
        ...
    
    def __setitem__(self, *args: Any) -> None:
        ...
    


class _Dispatch:
    """Expose methods and properties via fully dynamic dispatch."""
    _comobj: automation.IDispatch
    _ids: Dict[str, int]
    _methods: Set[str]
    def __init__(self, comobj: ctypes._Pointer[automation.IDispatch]) -> None:
        ...
    
    def __hash__(self) -> int:
        ...
    
    def __getitem__(self, index: Any) -> Any:
        ...
    
    def QueryInterface(self, interface: Type[_T_IUnknown], iid: Optional[GUID] = ...) -> _T_IUnknown:
        """QueryInterface is forwarded to the real com object."""
        ...
    
    def __getattr__(self, name: str) -> Any:
        ...
    
    def __setattr__(self, name: str, value: Any) -> None:
        ...
    
    def __iter__(self) -> _Collection:
        ...
    


class _Collection:
    def __init__(self, enum: automation.IEnumVARIANT) -> None:
        ...
    
    def __next__(self) -> Any:
        ...
    
    def __iter__(self): # -> Self:
        ...
    


__all__ = ["Dispatch"]
