"""
This type stub file was generated by pyright.
"""

import queue
import comtypes
from ctypes import _CArgObject, _Pointer, c_long, c_void_p
from typing import Any, Callable, ClassVar, Dict, List, Optional, Sequence, TYPE_CHECKING, Tuple, Type, TypeVar, Union as _UnionT
from comtypes import GUID, IUnknown, hints
from comtypes.typeinfo import ITypeInfo

if TYPE_CHECKING:
    ...
logger = ...
_debug = ...
_kernel32 = ...
_InterlockedIncrement = ...
_InterlockedDecrement = ...
_oleaut32 = ...
_DispGetIDsOfNames = ...
_DispInvoke = ...
_ole32_nohresult = ...
_ole32 = ...
_CoInitialize = ...
_CoAddRefServerProcess = ...
_CoReleaseServerProcess = ...
_user32 = ...
_PostQuitMessage = ...
class LocalServer:
    _queue: Optional[queue.Queue] = ...
    def run(self, classobjects: Sequence[hints.localserver.ClassFactory]) -> None:
        ...
    
    def run_sta(self) -> None:
        ...
    
    def run_mta(self) -> None:
        ...
    
    def Lock(self) -> None:
        ...
    
    def Unlock(self) -> None:
        ...
    


class InprocServer:
    def __init__(self) -> None:
        ...
    
    def Lock(self) -> None:
        ...
    
    def Unlock(self) -> None:
        ...
    
    def DllCanUnloadNow(self) -> int:
        ...
    


_T_IUnknown = TypeVar("_T_IUnknown", bound=IUnknown)
class COMObject:
    _com_interfaces_: ClassVar[List[Type[IUnknown]]]
    _outgoing_interfaces_: ClassVar[List[Type[hints.IDispatch]]]
    _instances_: ClassVar[Dict[COMObject, None]] = ...
    _reg_clsid_: ClassVar[GUID]
    _reg_typelib_: ClassVar[Tuple[str, int, int]]
    __typelib: hints.ITypeLib
    _com_pointers_: Dict[GUID, hints.LP_LP_Vtbl]
    _dispimpl_: Dict[Tuple[comtypes.dispid, int], Callable[..., Any]]
    def __new__(cls, *args: Any, **kw: Any) -> hints.Self:
        ...
    
    __server__: _UnionT[None, InprocServer, LocalServer] = ...
    @staticmethod
    def __run_inprocserver__() -> None:
        ...
    
    @staticmethod
    def __run_localserver__(classobjects: Sequence[hints.localserver.ClassFactory]) -> None:
        ...
    
    @staticmethod
    def __keep__(obj: COMObject) -> None:
        ...
    
    @staticmethod
    def __unkeep__(obj: COMObject) -> None:
        ...
    
    def IUnknown_AddRef(self, this: Any, _increment: Callable[[c_long], int] = ..., _debug=...) -> int:
        ...
    
    def IUnknown_Release(self, this: Any, _decrement: Callable[[c_long], int] = ..., _debug=...) -> int:
        ...
    
    def IUnknown_QueryInterface(self, this: Any, riid: _Pointer[GUID], ppvObj: _UnionT[c_void_p, _CArgObject], _debug=...) -> int:
        ...
    
    def QueryInterface(self, interface: Type[_T_IUnknown]) -> _T_IUnknown:
        "Query the object for an interface pointer"
        ...
    
    def ISupportErrorInfo_InterfaceSupportsErrorInfo(self, this: Any, riid: _Pointer[GUID]) -> int:
        ...
    
    def IProvideClassInfo_GetClassInfo(self) -> ITypeInfo:
        ...
    
    def IProvideClassInfo2_GetGUID(self, dwGuidKind: int) -> GUID:
        ...
    
    def IDispatch_GetTypeInfoCount(self): # -> Literal[1, 0]:
        ...
    
    def IDispatch_GetTypeInfo(self, this, itinfo, lcid, ptinfo): # -> Literal[-2147352565, 0, -2147467263]:
        ...
    
    def IDispatch_GetIDsOfNames(self, this, riid, rgszNames, cNames, lcid, rgDispId): # -> Any | Literal[-2147467263]:
        ...
    
    def IDispatch_Invoke(self, this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr): # -> Any | Literal[-2147352573]:
        ...
    
    def IPersist_GetClassID(self) -> GUID:
        ...
    


__all__ = ["COMObject"]
