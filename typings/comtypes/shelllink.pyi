"""
This type stub file was generated by pyright.
"""

from ctypes import POINTER, c_int
from typing import Literal, TYPE_CHECKING, Tuple
from comtypes import CoClass, IUnknown, hints

if TYPE_CHECKING:
    ...
SLGP_SHORTPATH = ...
SLGP_UNCPRIORITY = ...
SLGP_RAWPATH = ...
SW_SHOWNORMAL = ...
SW_SHOWMAXIMIZED = ...
SW_SHOWMINNOACTIVE = ...
SLR_INVOKE_MSI = ...
SLR_NOLINKINFO = ...
SLR_NO_UI = ...
SLR_NOUPDATE = ...
SLR_NOSEARCH = ...
SLR_NOTRACK = ...
SLR_UPDATE = ...
HOTKEYF_ALT = ...
HOTKEYF_CONTROL = ...
HOTKEYF_EXT = ...
HOTKEYF_SHIFT = ...
ITEMIDLIST = c_int
LPCITEMIDLIST = LPITEMIDLIST = POINTER(ITEMIDLIST)
class IShellLinkA(IUnknown):
    _iid_ = ...
    _methods_ = ...
    if TYPE_CHECKING:
        def GetIDList(self) -> hints.Incomplete:
            ...
        
        def SetIDList(self, pidl: hints.Incomplete) -> hints.Incomplete:
            ...
        
        def SetDescription(self, pszName: bytes) -> hints.Incomplete:
            ...
        
        def SetWorkingDirectory(self, pszDir: bytes) -> hints.Hresult:
            ...
        
        def SetArguments(self, pszArgs: bytes) -> hints.Hresult:
            ...
        
        @property
        def Hotkey(self) -> int:
            ...
        
        @Hotkey.setter
        def Hotkey(self, pwHotkey: int) -> None:
            ...
        
        @property
        def ShowCmd(self) -> int:
            ...
        
        @ShowCmd.setter
        def ShowCmd(self, piShowCmd: int) -> None:
            ...
        
        def SetIconLocation(self, pszIconPath: bytes, iIcon: int) -> hints.Hresult:
            ...
        
        def SetRelativePath(self, pszPathRel: bytes, dwReserved: Literal[0]) -> hints.Hresult:
            ...
        
        def Resolve(self, hwnd: int, fFlags: int) -> hints.Hresult:
            ...
        
        def SetPath(self, pszFile: bytes) -> hints.Hresult:
            ...
        
    def GetPath(self, flags: int = ...) -> bytes:
        ...
    
    def GetDescription(self) -> bytes:
        ...
    
    def GetWorkingDirectory(self) -> bytes:
        ...
    
    def GetArguments(self) -> bytes:
        ...
    
    def GetIconLocation(self) -> Tuple[bytes, int]:
        ...
    


class IShellLinkW(IUnknown):
    _iid_ = ...
    _methods_ = ...
    if TYPE_CHECKING:
        def GetIDList(self) -> hints.Incomplete:
            ...
        
        def SetIDList(self, pidl: hints.Incomplete) -> hints.Incomplete:
            ...
        
        def SetDescription(self, pszName: str) -> hints.Incomplete:
            ...
        
        def SetWorkingDirectory(self, pszDir: str) -> hints.Hresult:
            ...
        
        def SetArguments(self, pszArgs: str) -> hints.Hresult:
            ...
        
        @property
        def Hotkey(self) -> int:
            ...
        
        @Hotkey.setter
        def Hotkey(self, pwHotkey: int) -> None:
            ...
        
        @property
        def ShowCmd(self) -> int:
            ...
        
        @ShowCmd.setter
        def ShowCmd(self, piShowCmd: int) -> None:
            ...
        
        def SetIconLocation(self, pszIconPath: str, iIcon: int) -> hints.Hresult:
            ...
        
        def SetRelativePath(self, pszPathRel: str, dwReserved: Literal[0]) -> hints.Hresult:
            ...
        
        def Resolve(self, hwnd: int, fFlags: int) -> hints.Hresult:
            ...
        
        def SetPath(self, pszFile: str) -> hints.Hresult:
            ...
        
    def GetPath(self, flags: int = ...) -> str:
        ...
    
    def GetDescription(self) -> str:
        ...
    
    def GetWorkingDirectory(self) -> str:
        ...
    
    def GetArguments(self) -> str:
        ...
    
    def GetIconLocation(self) -> Tuple[str, int]:
        ...
    


class ShellLink(CoClass):
    """ShellLink class"""
    _reg_clsid_ = ...
    _idlflags_ = ...
    _com_interfaces_ = ...


